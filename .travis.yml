global:
  - secure: "hhFdQms/UYr31Iw6TQ5sDy7l+7/jhIFF1tt/InZFA1/U0N0s5MjM4cK1qn5Vj+GsMaLmv6JKzd5/ZKPrhN8LzT3gU1Ci7rUEiS7m8sVDCIjLjP+ClPK7T9yU3djgNARkvL4ZMA5j0lqn/bPUPYY6jfPZeE3oNKRMDRKrCZi/KqOvsn4J8rFkguewXXxG4nm7auodl17s7clp6brgpj/sAAa+4BG9vEOY2GXx01ghL7pk9StDQ5icSRh4/DLTyYpGxfQMSOOrNRs+jCakDBgr3uKO+jHCZKs0H1Q56x6AfkxIDaoreGDwZBeHNLCn74w08lyqQYpvLI734KD3C4xGnHInaoE8ICqEUHIlFVSuupnLSUMQQqVNDXLbkYvqFcwfAOkwoPsqKR4OkOdQwxWXt1RUklBneExZTvoJcMc8SieG+pYeWYIYB6uuyf/VW+7h1tSSJD/wHzWjgcjdE3wCsIrbEGVFCwzon/6T+KOe3xwmA4tUxpCP7+SExbex8Do/yQHMyVKpZcERruOlEyGQrWhUOxg60n0vW/aMxEZgPc5loGqg5hWzWhbMBCOE0pXEi4WOHAvfVQg9rHE/mapgeSuSy7W2Rwu9ORdOrAg6z3LpQgbXTPIcjnZv6IFqsD1JhRWmjHNCmsNrh1Gck/3Xt4LnhNVHpV0dSj10EwhM938="

language: java

jdk:
  - oraclejdk8

sudo: required

services:
  - docker

notifications:
    slack: nci-agency:TvRV22whtaRGflaCPPfv2G1v

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - client/node_modules

before_install:
  - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-  
  - echo "run.environment(\"DB_DRIVER\", \"sqlserver\")" > localSettings.gradle
  - echo "run.environment(\"ANET_SA_PASSWORD\", \"SA-P@ssw0rd\")" >> localSettings.gradle
  - echo "run.environment(\"ANET_DB_SERVER\", \"localhost\")"  >> localSettings.gradle
  - echo "run.environment(\"ANET_DB_NAME\", \"testAnet\")" >> localSettings.gradle
  - echo "run.environment(\"ANET_DB_USERNAME\", \"anetUser\")" >> localSettings.gradle
  - echo "run.environment(\"ANET_DB_PASSWORD\", \"Test-P@ssw0rd\")" >> localSettings.gradle
  - echo "run.environment(\"ANET_DB_PORT\", 1433)" >> localSettings.gradle
  - ./gradlew dockerCreateDB dockerStartDB

#By default travis runs gradle assemble in install. This is too early as we don't want to build yet
install:
  - ./gradlew npmInstall

script:
  - docker exec -ti -e "DB_NAME=testAnet" -e "DB_USER=anetUser" -e "DB_USER_PASSWORD=Test-P@ssw0rd" anet-mssql-server /opt/waitTillServiceStarted.sh
  - ./gradlew dbMigrate
  - docker exec -ti anet-mssql-server /opt/mssql-tools/bin/sqlcmd -S localhost -U anetUser -P 'Test-P@ssw0rd' -d testAnet -i /hostdata/insertBaseData.sql
  - ./gradlew check

after_script:
  - docker logs anet-mssql-server

addons:
  coverity_scan:
    project:
      name: "NCI-Agency/anet"
      description: "ANET Build from Travis CI"
    notification_email: vassil.iordanov@gmail.com
    build_command_prepend: "./gradlew clean"
    build_command:   "./gradlew build -x test"
    branch_pattern: candidate
